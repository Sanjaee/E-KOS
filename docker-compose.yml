version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ekos-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ekos_user
      POSTGRES_PASSWORD: ekos_password
      POSTGRES_DB: ekos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ekos_user -d ekos_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ekos-network

  # pgAdmin - PostgreSQL Management Tool
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ekos-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ekos.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - ekos-network

  # Next.js Application
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ekos-nextjs
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://ekos_user:ekos_password@postgres:5432/ekos_db
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-here-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ekos-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ekos-network:
    driver: bridge

